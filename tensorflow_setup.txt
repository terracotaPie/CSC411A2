tensorflow setup on python 3.5.2

setup with the gpu option to get faster perfs

http://www.nvidia.com/object/gpu-accelerated-applications-tensorflow-installation.html
# follow virtualenv instructions section
##############################################3

sudo tar -xvf cudnn-8.0-linux-x64-v5.1.tgz -C /usr/local

sudo apt-get install python-pip python-dev
pip install --upgrade pip

$ sudo apt-get install software-properties-common swig 
$ sudo add-apt-repository ppa:webupd8team/java 
$ sudo apt-get update 
$ sudo apt-get install oracle-java8-installer 
$ echo "deb http://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list 
$ curl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | sudo apt-key add - 
$ sudo apt-get update 
$ sudo apt-get install bazel

git clone https://github.com/tensorflow/tensorflow
cd tensorflow 

# commit from https://github.com/tensorflow/tensorflow/releases/tag/v1.0.0
git reset --hard 07bb8ea


$ ./configure 
Please specify the location of python. [Default is /usr/bin/python]: [enter]
Do you wish to build TensorFlow with Google Cloud Platform support? [y/N] n 
No Google Cloud Platform support will be enabled for TensorFlow 
Do you wish to build TensorFlow with GPU support? [y/N] y 
GPU support will be enabled for TensorFlow 
Please specify which gcc nvcc should use as the host compiler. [Default is /usr/bin/gcc]: [enter] 
Please specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0 
Please specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: [enter] 
Please specify the Cudnn version you want to use. [Leave empty to use system default]: 5 
Please specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: [enter] 
Please specify a list of comma-separated Cuda compute capabilities you want to build with. 
You can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus. 
Please note that each additional compute capability significantly increases your build time and binary size. 
[Default is: "3.5,5.2"]: [Enter] [see https://developer.nvidia.com/cuda-gpus] 
Setting up Cuda include 
Setting up Cuda lib64 
Setting up Cuda bin 
Setting up Cuda nvvm 
Setting up CUPTI include 
Setting up CUPTI lib64 
Configuration finished

bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package 
bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg


# python 3.5
sudo pip install --upgrade /tmp/tensorflow_pkg/tensorflow-0.9.0-*.whl

$ ls /tmp/tensorflow_pkg/*whl
/tmp/tensorflow_pkg/tensorflow-1.0.0-cp35-cp35m-linux_x86_64.whl


~/tensorflow$ cp -rf /tmp/tensorflow_pkg/*whl $HOME/tensorflow



# upgrade protobuf
sudo pip3 install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/protobuf-3.0.0b2.post2-cp35-none-linux_x86_64.whl



# to start up tensorflow in the terminal
source activate tensorflow

#deactivate the instance
deactivate

# to get rid of this problem when running tf program
#          I tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH:

# https://github.com/tensorflow/tensorflow/issues/5591

# do this
tar xvzf cudnn-8.0-linux-x64-v5.1.tgz
sudo cp -P cuda/include/cudnn.h /usr/local/cuda/include
sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*